{"version":3,"sources":["components/post/post.module.css","components/errorWhileFetching/errorWhileFetching.module.css","assets/logo.svg","components/header/header.tsx","api/nasaAPODClient.ts","components/post/post.tsx","components/post/postSkeleton.tsx","components/errorWhileFetching/errorWhileFetching.tsx","components/feed/feed.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","_g","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLogo","_ref","svgRef","title","titleId","props","id","xmlns","xmlnsXlink","x","y","viewBox","style","enableBackground","xmlSpace","ref","d","ForwardRef","useStyles","makeStyles","spaceBanner","backgroundImage","backgroundColor","icon","marginRight","Header","classes","AppBar","position","root","Container","maxWidth","Toolbar","disableGutters","SvgIcon","Typography","component","variant","API_BASE_URL","process","isError","res","undefined","code","getImages","params","a","url","URL","searchParams","append","count","toString","fetch","ok","json","jsonRes","errorString","error","msg","service_version","console","Error","map","link","thumbnail_url","author","copyright","description","explanation","date","Post","image","useState","isLiked","setIsLiked","likePost","Card","className","styles","card","CardMedia","src","onDoubleClick","cardContent","likeAndDate","IconButton","color","disableRipple","onClick","edge","size","pink","Date","toDateString","lines","more","less","join","anchorClass","showMore","PostSkeleton","skeletonTitle","Skeleton","width","height","ErrorWhileFetching","content","align","Button","startIcon","Feed","images","setImages","isLoading","setIsLoading","errorWhileFetching","setErrorWhileFetching","useEffect","fetchMoreImages","window","innerHeight","scrollY","document","body","offsetHeight","addEventListener","removeEventListener","imagesResult","concat","pullImages","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3c490976.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"post_card__2irEZ\",\"cardContent\":\"post_cardContent__35_tg\",\"likeAndDate\":\"post_likeAndDate__8lFAO\",\"showMore\":\"post_showMore__3GYU5\",\"title\":\"post_title__3_TXp\",\"likeButton\":\"post_likeButton__YJjlz\",\"skeletonTitle\":\"post_skeletonTitle__3xSok\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"errorWhileFetching_content__c4TrC\"};","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 121.12 122.88\",\n    style: {\n      enableBackground: \"new 0 0 121.12 122.88\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.61,114.81c3.99,4.34,12.59,2.3,23.22-3.61c-9.67-6.54-17.2-15.98-21.36-27.08C5.18,96.93,3.53,108.18,9.61,114.81 L9.61,114.81z M110.6,31.4c4.88-9.62,6.38-17.43,2.66-21.51c-5.71-6.25-16.44-4.79-28.96,1.33C94.95,15.2,104.09,22.3,110.6,31.4 L110.6,31.4z M64.51,7.67c3.96,0,7.83,0.41,11.56,1.18c17.19-9.68,32.87-12.5,41.58-2.97c5.6,6.13,3.67,17.02-2.89,29.78l0-0.01 l-0.03,0.07c-0.21,0.41-0.42,0.81-0.64,1.23l0.05,0.1c-14.06,31.09-41.39,57.46-73.32,76.33l-2.11,1.32l-0.05-0.03 c-14.46,8.49-26.94,11.28-33.45,4.19c-8.83-9.62-5.73-25.63,3.9-42.84C8.32,72.22,7.9,68.3,7.9,64.28 C7.9,33.01,33.24,7.67,64.51,7.67L64.51,7.67z M118.62,47.6c1.62,5.27,2.5,10.87,2.5,16.68c0,31.26-25.34,56.61-56.61,56.61 c-5.86,0-11.51-0.89-16.82-2.54c31.51-18.76,55.43-42.16,70.92-70.72l0,0L118.62,47.6L118.62,47.6z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.dea97208.svg\";\nexport { ForwardRef as ReactComponent };","import {\r\n  AppBar,\r\n  Container,\r\n  makeStyles,\r\n  SvgIcon,\r\n  Toolbar,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport { ReactComponent as LogoSvg } from '../../assets/logo.svg'\r\n\r\nconst useStyles = makeStyles({\r\n  spaceBanner: {\r\n    backgroundImage:\r\n      'url(\"https://www.nasa.gov/sites/default/files/thumbnails/image/stsci-h-p1917b-q-5198x4801.jpg\")',\r\n    backgroundColor: 'black',\r\n  },\r\n  icon: {\r\n    marginRight: '8px',\r\n  },\r\n})\r\n\r\nexport default function Header() {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <AppBar position=\"sticky\" classes={{ root: classes.spaceBanner }}>\r\n      <Container maxWidth=\"md\">\r\n        <Toolbar disableGutters>\r\n          <SvgIcon classes={{ root: classes.icon }}>\r\n            <LogoSvg />\r\n          </SvgIcon>\r\n          <Typography component=\"h1\" variant=\"h6\">\r\n            Spacestagram\r\n          </Typography>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  )\r\n}\r\n","const API_KEY = process.env.REACT_APP_NASA_APOD_API_KEY\r\n\r\nconst API_BASE_URL = `https://api.nasa.gov/planetary/apod?api_key=${API_KEY}&thumbs=True`\r\n\r\n// Reference https://github.com/nasa/apod-api\r\n/** Search parameters */\r\ninterface Params {\r\n  /** A positive integer, no greater than 100. */\r\n  count: number\r\n  /** A string in YYYY-MM-DD format indicating the start of a date range. All images in the range from start_date to end_date will be returned in a JSON array. Cannot be used with date. */\r\n  // start_date?: string\r\n  /** A string in YYYY-MM-DD format indicating that end of a date range. If start_date is specified without an end_date then end_date defaults to the current date. */\r\n  // end_date?: string\r\n}\r\n\r\ntype Result = {\r\n  copyright: string\r\n  date: string\r\n  explanation: string\r\n  hdurl: string\r\n  media_type: 'image' | 'video'\r\n  service_version: string\r\n  title: string\r\n  url: string\r\n  thumbnail_url?: string\r\n}\r\n\r\ntype ErrorResponse = {\r\n  code: number\r\n  msg: string\r\n  service_version: string\r\n}\r\n\r\ntype ApiResponse = Result[] | ErrorResponse\r\n\r\nexport type ImageDetails = {\r\n  link: string\r\n  title: string\r\n  description: string\r\n  date: string\r\n  author: string\r\n}\r\n\r\nconst isError = (res: ApiResponse): res is ErrorResponse => {\r\n  return (res as ErrorResponse).code !== undefined\r\n}\r\n\r\nexport const getImages = async (params: Params): Promise<ImageDetails[]> => {\r\n  let url = new URL(API_BASE_URL)\r\n\r\n  url.searchParams.append('count', params.count.toString())\r\n\r\n  const res = await fetch(url.toString())\r\n\r\n  if (!res.ok) {\r\n    throw res\r\n  }\r\n\r\n  let jsonRes = await res.json()\r\n  jsonRes = jsonRes as ApiResponse\r\n\r\n  if (isError(jsonRes)) {\r\n    const error = jsonRes as ErrorResponse\r\n    const errorString = `code=${error.code} msg=${error.msg} service_version=${error.service_version}`\r\n\r\n    console.error(\r\n      `API response succeeded, but there was an error: ${errorString}`\r\n    )\r\n\r\n    throw new Error(errorString)\r\n  }\r\n\r\n  return (jsonRes as Result[]).map(\r\n    (x) =>\r\n      ({\r\n        link: x.thumbnail_url ?? x.url,\r\n        author: x.copyright,\r\n        title: x.title,\r\n        description: x.explanation,\r\n        date: x.date,\r\n      } as ImageDetails)\r\n  )\r\n}\r\n","import { useState } from 'react'\r\nimport { Card, CardMedia, IconButton, Typography } from '@material-ui/core'\r\nimport { pink } from '@material-ui/core/colors'\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder'\r\nimport FavoriteIcon from '@material-ui/icons/Favorite'\r\nimport ShowMoreText from 'react-show-more-text'\r\n\r\nimport styles from './post.module.css'\r\n\r\ntype Props = {\r\n  image: string\r\n  title: string\r\n  date: string\r\n  description: string\r\n}\r\n\r\nexport default function Post({ image, title, date, description }: Props) {\r\n  const [isLiked, setIsLiked] = useState(false)\r\n\r\n  const likePost = () => {\r\n    setIsLiked(!isLiked)\r\n  }\r\n\r\n  return (\r\n    <Card variant=\"outlined\" className={styles.card} component=\"article\">\r\n      <header className={styles.title}>\r\n        <Typography variant=\"h6\">{title}</Typography>\r\n      </header>\r\n      <CardMedia\r\n        component=\"img\"\r\n        src={image}\r\n        title={title}\r\n        onDoubleClick={likePost}\r\n      />\r\n      <div className={styles.cardContent}>\r\n        <div className={styles.likeAndDate}>\r\n          <IconButton\r\n            color=\"primary\"\r\n            disableRipple\r\n            onClick={likePost}\r\n            edge=\"start\"\r\n            size=\"small\"\r\n          >\r\n            {isLiked ? (\r\n              <FavoriteIcon style={{ color: pink[500] }} />\r\n            ) : (\r\n              <FavoriteBorderIcon color=\"disabled\" />\r\n            )}\r\n          </IconButton>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {new Date(date).toDateString()}\r\n          </Typography>\r\n        </div>\r\n        <ShowMoreText\r\n          lines={3}\r\n          more=\"More\"\r\n          less=\"Less\"\r\n          className={[\r\n            'MuiTypography-root',\r\n            'MuiTypography-body2',\r\n            'MuiTypography-colorTextSecondary',\r\n          ].join(' ')}\r\n          anchorClass={styles.showMore}\r\n        >\r\n          {description}\r\n        </ShowMoreText>\r\n      </div>\r\n    </Card>\r\n  )\r\n}\r\n","import { Card, Typography } from '@material-ui/core'\r\nimport { Skeleton } from '@material-ui/lab'\r\n\r\nimport styles from './post.module.css'\r\n\r\nexport default function PostSkeleton() {\r\n  return (\r\n    <Card variant=\"outlined\" className={styles.card} component=\"article\">\r\n      <header className={styles.skeletonTitle}>\r\n        <Typography variant=\"h6\">\r\n          <Skeleton variant=\"text\" width=\"60%\" />\r\n        </Typography>\r\n      </header>\r\n\r\n      <Skeleton variant=\"rect\" height={200} />\r\n\r\n      <div className={styles.cardContent}>\r\n        <Skeleton variant=\"text\" />\r\n        <Skeleton variant=\"text\" />\r\n        <Skeleton variant=\"text\" width=\"50%\" />\r\n      </div>\r\n    </Card>\r\n  )\r\n}\r\n","import WarningIcon from '@material-ui/icons/Warning'\r\nimport ReplayIcon from '@material-ui/icons/Replay'\r\nimport { Button, Typography } from '@material-ui/core'\r\n\r\nimport styles from './errorWhileFetching.module.css'\r\n\r\ntype Props = {\r\n  onClick: () => void\r\n}\r\n\r\nexport default function ErrorWhileFetching({ onClick }: Props) {\r\n  return (\r\n    <div className={styles.content}>\r\n      <WarningIcon color=\"inherit\" />\r\n\r\n      <Typography variant=\"body1\" color=\"textSecondary\" align=\"center\">\r\n        Could not fetch more posts...\r\n      </Typography>\r\n      <Button\r\n        variant=\"text\"\r\n        color=\"inherit\"\r\n        startIcon={<ReplayIcon />}\r\n        size=\"small\"\r\n        onClick={onClick}\r\n      >\r\n        Retry\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { getImages, ImageDetails } from '../../api/nasaAPODClient'\r\nimport Post from '../post/post'\r\nimport PostSkeleton from '../post/postSkeleton'\r\nimport ErrorWhileFetching from '../errorWhileFetching/errorWhileFetching'\r\n\r\nconst NUMBER_OF_IMAGES_TO_PULL = 10\r\n\r\nexport default function Feed() {\r\n  const [images, setImages] = useState<ImageDetails[]>()\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [errorWhileFetching, setErrorWhileFetching] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const fetchMoreImages = () => {\r\n      if (\r\n        window.innerHeight + window.scrollY >= document.body.offsetHeight &&\r\n        !errorWhileFetching\r\n      ) {\r\n        setIsLoading(true)\r\n      }\r\n    }\r\n\r\n    window.addEventListener('scroll', fetchMoreImages)\r\n    return () => {\r\n      window.removeEventListener('scroll', fetchMoreImages)\r\n    }\r\n  }, [errorWhileFetching])\r\n\r\n  useEffect(() => {\r\n    async function pullImages() {\r\n      try {\r\n        const imagesResult = await getImages({\r\n          count: NUMBER_OF_IMAGES_TO_PULL,\r\n        })\r\n\r\n        setImages((images) =>\r\n          images ? images.concat(imagesResult) : imagesResult\r\n        )\r\n      } catch (error) {\r\n        setErrorWhileFetching(true)\r\n      }\r\n\r\n      setIsLoading(false)\r\n    }\r\n\r\n    if (isLoading) {\r\n      pullImages()\r\n    }\r\n  }, [isLoading])\r\n\r\n  const handleFetchRetry = () => {\r\n    setIsLoading(true)\r\n    setErrorWhileFetching(false)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {images?.map((x, i) => (\r\n        <Post\r\n          key={i}\r\n          image={x.link}\r\n          title={x.title}\r\n          date={x.date}\r\n          description={x.description}\r\n        />\r\n      ))}\r\n      {isLoading && <PostSkeleton />}\r\n      {errorWhileFetching && <ErrorWhileFetching onClick={handleFetchRetry} />}\r\n    </div>\r\n  )\r\n}\r\n","import { Container } from '@material-ui/core'\nimport Header from './components/header/header'\n\nimport './App.css'\nimport Feed from './components/feed/feed'\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Header />\n      <Container className=\"mainContainer\" maxWidth=\"md\" component=\"main\">\n        <Feed />\n      </Container>\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}